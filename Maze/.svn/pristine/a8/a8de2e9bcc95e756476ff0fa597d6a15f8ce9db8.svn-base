package falstad;

import falstad.Robot.Turn;

public class ManualDriver implements RobotDriver {
	
	public Robot robot;
	private Distance distance;
	public int pathLength = 0;
	private int width;
	private int height;
	private float initBattery;
	private Turn move;
	
	@Override
	public void setRobot(Robot r) {
		// TODO Auto-generated method stub
		robot = r;
		((BasicRobot) robot).setDriver(this);
	}

	@Override
	public void setDimensions(int width, int height) {
		// TODO Auto-generated method stub
		this.width = width;
		this.height = height;
	}

	@Override
	public void setDistance(Distance distance) {
		// TODO Auto-generated method stub
		this.distance = distance;
	}

	@Override
	public boolean drive2Exit() throws Exception {
		// TODO Auto-generated method stub
		if (robot.hasStopped() == true){
			throw new Exception();
		}
		
		else{
			move = ((BasicRobot) robot).getCurMove();
			if (move == null){
				this.pathLength += 1;
				robot.move(1);
			}
			
			if (move == Turn.AROUND){
				robot.rotate(Turn.AROUND);
			}
			
			if (move == Turn.LEFT){
				robot.rotate(Turn.LEFT);
			}
			
			if (move == Turn.RIGHT){
				robot.rotate(Turn.RIGHT);
			}
			
			if (robot.isAtGoal() == true){
				return true;
			}
			
			
			return false;
		}
	}

	@Override
	public float getEnergyConsumption() {
		// TODO Auto-generated method stub
		return (robot.getBatteryLevel() - initBattery);
	}

	@Override
	public int getPathLength() {
		// TODO Auto-generated method stub
		return this.pathLength;
	}

}
