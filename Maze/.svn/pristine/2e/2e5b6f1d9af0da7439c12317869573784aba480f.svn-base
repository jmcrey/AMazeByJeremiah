package falstad;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
public class GUI implements ActionListener {
	
	MazeApplication app;
	Maze maze;
	
	JFrame frame;
	int level;

	String driver;
	String algorithm;
	JButton button;
	
	ComboBox drivers;
	ComboBox algs;
	ComboBox levels;
	
	String myDriver;
	String myAlgorithm;
	int myLevel;
	
	public GUI(MazeApplication app, Maze maze){
		this.app = app;
		this.maze = maze;
	}
	
	public void makeGUI(){
		frame = new JFrame("Maze");
        JLabel label = new JLabel("Welcome to the Maze. Choose:");
        label.setFont(new Font("Times New Roman", 1, 20));
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        //Create and set up the content pane.
        JComponent newContentPane = new JPanel(new BorderLayout());
        newContentPane.add(label, BorderLayout.PAGE_START);
        JComponent newContentPane2 = new JPanel(new BorderLayout());
        JComponent newContentPane3 = new JPanel(new BorderLayout());
        ////////// Combo Boxes ///////////////////
        drivers = new ComboBox("drivers");
        algs = new ComboBox("algorithms");
        levels = new ComboBox("levels");
        newContentPane2.add(algs, BorderLayout.WEST);
        newContentPane2.add(drivers, BorderLayout.CENTER);
        newContentPane2.add(levels, BorderLayout.EAST);
        // Adds it to the first panel in the center
        newContentPane.add(newContentPane2, BorderLayout.CENTER);
        
        button = new JButton("GO!");
        
        button.addActionListener(this);
        newContentPane3.add(button);
        newContentPane.add(newContentPane3,  BorderLayout.PAGE_END);

        newContentPane.setOpaque(true); //content panes must be opaque
        ///////////////// GUI Initializer ///////////////////
        frame.setContentPane(newContentPane);
        frame.pack();
        frame.setVisible(false);
	}
	
	public void showGUI(){
		frame.setVisible(true);
	}
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		frame.setVisible(false);
		if( drivers.getInput() != null)
			driver = drivers.getInput();
		else
			driver = "Manual Driver";
		if(algs.getInput() != null)
			algorithm = algs.getInput();
		else
			algorithm = "Standard";
		if(levels.getInput() != null)
			level = Integer.parseInt(levels.getInput());
		else
			level = 0;
		System.out.println("I'm being called too???");
		maze.reset(algorithm, driver, level);
		maze.build(level);
		app.repaint();
	}
	
}
